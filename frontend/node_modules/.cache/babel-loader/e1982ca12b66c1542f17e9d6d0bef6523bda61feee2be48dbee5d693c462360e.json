{"ast":null,"code":"var _jsxFileName = \"E:\\\\tripilot-real-estate(29-june)\\\\frontend\\\\src\\\\components\\\\Search\\\\DocumentTable.tsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/Search/DocumentTable.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { ChevronUp, ChevronDown, Eye, Filter, Download } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DocumentTable = ({\n  documents,\n  onFieldUpdate,\n  onDocumentSelect,\n  onRunAutomation\n}) => {\n  _s();\n  const [sortField, setSortField] = useState('uploadedAt');\n  const [sortDirection, setSortDirection] = useState('desc');\n  const [visibleColumns, setVisibleColumns] = useState(new Set());\n  const [filters, setFilters] = useState({});\n  const [selectedRows, setSelectedRows] = useState(new Set());\n  const [editingCell, setEditingCell] = useState(null);\n  const [editValue, setEditValue] = useState('');\n\n  // Core columns that should always be visible\n  const coreColumns = ['filename', 'address', 'beds', 'baths', 'squareFootage', 'listingPrice', 'estimatedARV', 'lienStatus', 'infrastructureScore'];\n\n  // All available columns from documents\n  const allColumns = React.useMemo(() => {\n    const columnSet = new Set(['filename', 'uploadedAt', 'status']);\n    documents.forEach(doc => {\n      Object.keys(doc).forEach(key => {\n        if (key !== 'id' && key !== 'type') {\n          columnSet.add(key);\n        }\n      });\n    });\n    return Array.from(columnSet);\n  }, [documents]);\n  useEffect(() => {\n    // Initialize visible columns with core columns\n    setVisibleColumns(new Set(coreColumns.filter(col => allColumns.includes(col))));\n  }, [allColumns]);\n  const handleSort = field => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n  const handleEdit = (docId, field, currentValue) => {\n    setEditingCell({\n      docId,\n      field\n    });\n    setEditValue(String(currentValue || ''));\n  };\n  const handleSaveEdit = () => {\n    if (editingCell) {\n      onFieldUpdate(editingCell.docId, editingCell.field, editValue);\n      setEditingCell(null);\n    }\n  };\n  const handleSelectRow = docId => {\n    const newSelected = new Set(selectedRows);\n    if (newSelected.has(docId)) {\n      newSelected.delete(docId);\n    } else {\n      newSelected.add(docId);\n    }\n    setSelectedRows(newSelected);\n    onDocumentSelect(Array.from(newSelected));\n  };\n  const filteredAndSortedDocs = React.useMemo(() => {\n    let filtered = documents.filter(doc => {\n      return Object.entries(filters).every(([field, value]) => {\n        if (!value) return true;\n        const docValue = String(doc[field] || '').toLowerCase();\n        return docValue.includes(value.toLowerCase());\n      });\n    });\n    return filtered.sort((a, b) => {\n      const aVal = a[sortField] || '';\n      const bVal = b[sortField] || '';\n      const compare = aVal < bVal ? -1 : aVal > bVal ? 1 : 0;\n      return sortDirection === 'asc' ? compare : -compare;\n    });\n  }, [documents, filters, sortField, sortDirection]);\n  const renderCellValue = (doc, field) => {\n    const value = doc[field];\n    if (value === null || value === undefined) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-400 italic\",\n        children: \"N/A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Format specific field types\n    if (field.includes('Price') || field === 'estimatedARV' || field === 'taxAssessment') {\n      return typeof value === 'number' ? `$${value.toLocaleString()}` : value;\n    }\n    if (field === 'squareFootage' || field === 'lotSize') {\n      return typeof value === 'number' ? `${value.toLocaleString()} sq ft` : value;\n    }\n    if (field === 'uploadedAt' && value instanceof Date) {\n      return new Date(value).toLocaleDateString();\n    }\n    if (field === 'infrastructureScore' && typeof value === 'number') {\n      const color = value >= 80 ? 'text-green-600' : value >= 60 ? 'text-yellow-600' : 'text-red-600';\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `font-semibold ${color}`,\n        children: [value, \"/100\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 14\n      }, this);\n    }\n    if (field === 'lienStatus') {\n      const color = value === 'Clear' ? 'text-green-600' : value === 'Unknown' ? 'text-gray-500' : 'text-red-600';\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: color,\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 14\n      }, this);\n    }\n    return String(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-white rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-4 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: \"Property Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-500\",\n          children: [filteredAndSortedDocs.length, \" of \", documents.length, \" documents\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"p-2 hover:bg-gray-100 rounded-lg flex items-center gap-2\",\n            onClick: () => {/* Toggle column picker */},\n            children: [/*#__PURE__*/_jsxDEV(Eye, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: \"Columns\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-2 hover:bg-gray-100 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(Download, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2 p-2 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        size: 16,\n        className: \"text-gray-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), Array.from(visibleColumns).slice(0, 5).map(column => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Filter ${column}`,\n        className: \"px-2 py-1 text-sm border rounded flex-1\",\n        value: filters[column] || '',\n        onChange: e => setFilters({\n          ...filters,\n          [column]: e.target.value\n        })\n      }, column, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-50 sticky top-0\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 text-left\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedRows(new Set(documents.map(d => d.id)));\n                  } else {\n                    setSelectedRows(new Set());\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), Array.from(visibleColumns).map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 text-left text-sm font-medium text-gray-700 cursor-pointer hover:bg-gray-100\",\n              onClick: () => handleSort(column),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-1\",\n                children: [column, sortField === column && (sortDirection === 'asc' ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 75\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)\n            }, column, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredAndSortedDocs.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b hover:bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedRows.has(doc.id),\n                onChange: () => handleSelectRow(doc.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), Array.from(visibleColumns).map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2 text-sm\",\n              onDoubleClick: () => handleEdit(doc.id, column, doc[column]),\n              children: (editingCell === null || editingCell === void 0 ? void 0 : editingCell.docId) === doc.id && (editingCell === null || editingCell === void 0 ? void 0 : editingCell.field) === column ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editValue,\n                onChange: e => setEditValue(e.target.value),\n                onBlur: handleSaveEdit,\n                onKeyPress: e => e.key === 'Enter' && handleSaveEdit(),\n                className: \"w-full px-1 py-0.5 border rounded\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 23\n              }, this) : renderCellValue(doc, column)\n            }, column, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this))]\n          }, doc.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), selectedRows.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-blue-50 border-t flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-blue-700\",\n        children: [selectedRows.size, \" document\", selectedRows.size > 1 ? 's' : '', \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onRunAutomation === null || onRunAutomation === void 0 ? void 0 : onRunAutomation(Array.from(selectedRows)),\n          className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n          children: \"Run Automation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-3 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\",\n          children: \"Generate Snapshot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentTable, \"HMWWw5ckgNtJOYsDHKTgXngTkz4=\");\n_c = DocumentTable;\nvar _c;\n$RefreshReg$(_c, \"DocumentTable\");","map":{"version":3,"names":["React","useState","useEffect","ChevronUp","ChevronDown","Eye","Filter","Download","jsxDEV","_jsxDEV","DocumentTable","documents","onFieldUpdate","onDocumentSelect","onRunAutomation","_s","sortField","setSortField","sortDirection","setSortDirection","visibleColumns","setVisibleColumns","Set","filters","setFilters","selectedRows","setSelectedRows","editingCell","setEditingCell","editValue","setEditValue","coreColumns","allColumns","useMemo","columnSet","forEach","doc","Object","keys","key","add","Array","from","filter","col","includes","handleSort","field","handleEdit","docId","currentValue","String","handleSaveEdit","handleSelectRow","newSelected","has","delete","filteredAndSortedDocs","filtered","entries","every","value","docValue","toLowerCase","sort","a","b","aVal","bVal","compare","renderCellValue","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","Date","toLocaleDateString","color","length","onClick","size","slice","map","column","type","placeholder","onChange","e","target","checked","d","id","onDoubleClick","onBlur","onKeyPress","autoFocus","_c","$RefreshReg$"],"sources":["E:/tripilot-real-estate(29-june)/frontend/src/components/Search/DocumentTable.tsx"],"sourcesContent":["// frontend/src/components/Search/DocumentTable.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ChevronUp, ChevronDown, Eye, EyeOff, Filter, Download, X } from 'lucide-react';\r\nimport { ExtractedFields } from '../../../../shared/types';\r\n\r\ninterface DocumentTableProps {\r\n  documents: any[];\r\n  onFieldUpdate: (documentId: string, field: string, value: any) => void;\r\n  onDocumentSelect: (documentIds: string[]) => void;\r\n  onRunAutomation?: (documentIds: string[]) => void;\r\n}\r\n\r\nexport const DocumentTable: React.FC<DocumentTableProps> = ({\r\n  documents,\r\n  onFieldUpdate,\r\n  onDocumentSelect,\r\n  onRunAutomation\r\n}) => {\r\n  const [sortField, setSortField] = useState<string>('uploadedAt');\r\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('desc');\r\n  const [visibleColumns, setVisibleColumns] = useState<Set<string>>(new Set());\r\n  const [filters, setFilters] = useState<Record<string, string>>({});\r\n  const [selectedRows, setSelectedRows] = useState<Set<string>>(new Set());\r\n  const [editingCell, setEditingCell] = useState<{ docId: string; field: string } | null>(null);\r\n  const [editValue, setEditValue] = useState('');\r\n\r\n  // Core columns that should always be visible\r\n  const coreColumns = [\r\n    'filename', 'address', 'beds', 'baths', 'squareFootage', \r\n    'listingPrice', 'estimatedARV', 'lienStatus', 'infrastructureScore'\r\n  ];\r\n\r\n  // All available columns from documents\r\n  const allColumns = React.useMemo(() => {\r\n    const columnSet = new Set<string>(['filename', 'uploadedAt', 'status']);\r\n    documents.forEach(doc => {\r\n      Object.keys(doc).forEach(key => {\r\n        if (key !== 'id' && key !== 'type') {\r\n          columnSet.add(key);\r\n        }\r\n      });\r\n    });\r\n    return Array.from(columnSet);\r\n  }, [documents]);\r\n\r\n  useEffect(() => {\r\n    // Initialize visible columns with core columns\r\n    setVisibleColumns(new Set(coreColumns.filter(col => allColumns.includes(col))));\r\n  }, [allColumns]);\r\n\r\n  const handleSort = (field: string) => {\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (docId: string, field: string, currentValue: any) => {\r\n    setEditingCell({ docId, field });\r\n    setEditValue(String(currentValue || ''));\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    if (editingCell) {\r\n      onFieldUpdate(editingCell.docId, editingCell.field, editValue);\r\n      setEditingCell(null);\r\n    }\r\n  };\r\n\r\n  const handleSelectRow = (docId: string) => {\r\n    const newSelected = new Set(selectedRows);\r\n    if (newSelected.has(docId)) {\r\n      newSelected.delete(docId);\r\n    } else {\r\n      newSelected.add(docId);\r\n    }\r\n    setSelectedRows(newSelected);\r\n    onDocumentSelect(Array.from(newSelected));\r\n  };\r\n\r\n  const filteredAndSortedDocs = React.useMemo(() => {\r\n    let filtered = documents.filter(doc => {\r\n      return Object.entries(filters).every(([field, value]) => {\r\n        if (!value) return true;\r\n        const docValue = String(doc[field] || '').toLowerCase();\r\n        return docValue.includes(value.toLowerCase());\r\n      });\r\n    });\r\n\r\n    return filtered.sort((a, b) => {\r\n      const aVal = a[sortField] || '';\r\n      const bVal = b[sortField] || '';\r\n      const compare = aVal < bVal ? -1 : aVal > bVal ? 1 : 0;\r\n      return sortDirection === 'asc' ? compare : -compare;\r\n    });\r\n  }, [documents, filters, sortField, sortDirection]);\r\n\r\n  const renderCellValue = (doc: any, field: string) => {\r\n    const value = doc[field];\r\n    \r\n    if (value === null || value === undefined) {\r\n      return <span className=\"text-gray-400 italic\">N/A</span>;\r\n    }\r\n\r\n    // Format specific field types\r\n    if (field.includes('Price') || field === 'estimatedARV' || field === 'taxAssessment') {\r\n      return typeof value === 'number' ? `$${value.toLocaleString()}` : value;\r\n    }\r\n    \r\n    if (field === 'squareFootage' || field === 'lotSize') {\r\n      return typeof value === 'number' ? `${value.toLocaleString()} sq ft` : value;\r\n    }\r\n\r\n    if (field === 'uploadedAt' && value instanceof Date) {\r\n      return new Date(value).toLocaleDateString();\r\n    }\r\n\r\n    if (field === 'infrastructureScore' && typeof value === 'number') {\r\n      const color = value >= 80 ? 'text-green-600' : value >= 60 ? 'text-yellow-600' : 'text-red-600';\r\n      return <span className={`font-semibold ${color}`}>{value}/100</span>;\r\n    }\r\n\r\n    if (field === 'lienStatus') {\r\n      const color = value === 'Clear' ? 'text-green-600' : value === 'Unknown' ? 'text-gray-500' : 'text-red-600';\r\n      return <span className={color}>{value}</span>;\r\n    }\r\n\r\n    return String(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full bg-white rounded-lg shadow\">\r\n      {/* Toolbar */}\r\n      <div className=\"flex items-center justify-between p-4 border-b\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <h2 className=\"text-lg font-semibold\">Property Documents</h2>\r\n          <span className=\"text-sm text-gray-500\">\r\n            {filteredAndSortedDocs.length} of {documents.length} documents\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-2\">\r\n          {/* Column Visibility Toggle */}\r\n          <div className=\"relative\">\r\n            <button\r\n              className=\"p-2 hover:bg-gray-100 rounded-lg flex items-center gap-2\"\r\n              onClick={() => {/* Toggle column picker */}}\r\n            >\r\n              <Eye size={16} />\r\n              <span className=\"text-sm\">Columns</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Export Button */}\r\n          <button className=\"p-2 hover:bg-gray-100 rounded-lg\">\r\n            <Download size={16} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filter Row */}\r\n      <div className=\"flex items-center gap-2 p-2 bg-gray-50 border-b\">\r\n        <Filter size={16} className=\"text-gray-500\" />\r\n        {Array.from(visibleColumns).slice(0, 5).map(column => (\r\n          <input\r\n            key={column}\r\n            type=\"text\"\r\n            placeholder={`Filter ${column}`}\r\n            className=\"px-2 py-1 text-sm border rounded flex-1\"\r\n            value={filters[column] || ''}\r\n            onChange={(e) => setFilters({ ...filters, [column]: e.target.value })}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <div className=\"flex-1 overflow-auto\">\r\n        <table className=\"w-full\">\r\n          <thead className=\"bg-gray-50 sticky top-0\">\r\n            <tr>\r\n              <th className=\"p-2 text-left\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedRows(new Set(documents.map(d => d.id)));\r\n                    } else {\r\n                      setSelectedRows(new Set());\r\n                    }\r\n                  }}\r\n                />\r\n              </th>\r\n              {Array.from(visibleColumns).map(column => (\r\n                <th\r\n                  key={column}\r\n                  className=\"p-2 text-left text-sm font-medium text-gray-700 cursor-pointer hover:bg-gray-100\"\r\n                  onClick={() => handleSort(column)}\r\n                >\r\n                  <div className=\"flex items-center gap-1\">\r\n                    {column}\r\n                    {sortField === column && (\r\n                      sortDirection === 'asc' ? <ChevronUp size={14} /> : <ChevronDown size={14} />\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredAndSortedDocs.map((doc) => (\r\n              <tr key={doc.id} className=\"border-b hover:bg-gray-50\">\r\n                <td className=\"p-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedRows.has(doc.id)}\r\n                    onChange={() => handleSelectRow(doc.id)}\r\n                  />\r\n                </td>\r\n                {Array.from(visibleColumns).map(column => (\r\n                  <td\r\n                    key={column}\r\n                    className=\"p-2 text-sm\"\r\n                    onDoubleClick={() => handleEdit(doc.id, column, doc[column])}\r\n                  >\r\n                    {editingCell?.docId === doc.id && editingCell?.field === column ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editValue}\r\n                        onChange={(e) => setEditValue(e.target.value)}\r\n                        onBlur={handleSaveEdit}\r\n                        onKeyPress={(e) => e.key === 'Enter' && handleSaveEdit()}\r\n                        className=\"w-full px-1 py-0.5 border rounded\"\r\n                        autoFocus\r\n                      />\r\n                    ) : (\r\n                      renderCellValue(doc, column)\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Selected Actions */}\r\n      {selectedRows.size > 0 && (\r\n        <div className=\"p-4 bg-blue-50 border-t flex items-center justify-between\">\r\n          <span className=\"text-sm text-blue-700\">\r\n            {selectedRows.size} document{selectedRows.size > 1 ? 's' : ''} selected\r\n          </span>\r\n          <div className=\"flex gap-2\">\r\n              <button\r\n             onClick={() => onRunAutomation?.(Array.from(selectedRows))}\r\n             className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\r\n           >\r\n             Run Automation\r\n           </button>\r\n            <button className=\"px-3 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\">\r\n              Generate Snapshot\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}