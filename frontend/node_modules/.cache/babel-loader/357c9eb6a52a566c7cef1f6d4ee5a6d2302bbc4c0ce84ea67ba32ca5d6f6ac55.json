{"ast":null,"code":"// // frontend/src/components/Snapshot/FactSheet.tsx\n\n// import React, { useState } from 'react';\n// import { FileText, Download, TrendingUp, AlertTriangle, Home, DollarSign, MapPin, Calendar, Clock } from 'lucide-react';\n// import { FactSheet as FactSheetType, Comp } from '../../../../shared/types';\n\n// interface FactSheetProps {\n//   selectedDocuments: any[];\n//   rehabScope?: any;\n//   onGenerateFactSheet: (factSheet: FactSheetType) => void;\n// }\n\n// export const FactSheet: React.FC<FactSheetProps> = ({\n//   selectedDocuments,\n//   rehabScope,\n//   onGenerateFactSheet\n// }) => {\n//   const [isGenerating, setIsGenerating] = useState(false);\n//   const [previewData, setPreviewData] = useState<FactSheetType | null>(null);\n\n//   // Get property data from selected documents\n//   const propertyData = React.useMemo(() => {\n//     if (selectedDocuments.length === 0) return null;\n\n//     const merged: any = {};\n//     selectedDocuments.forEach(doc => {\n//       Object.entries(doc).forEach(([key, value]) => {\n//         if (value !== null && value !== undefined && value !== 'N/A') {\n//           merged[key] = merged[key] || value;\n//         }\n//       });\n//     });\n//     return merged;\n//   }, [selectedDocuments]);\n\n//   const generateComps = (): Comp[] => {\n//     const basePrice = propertyData?.listingPrice || 300000;\n//     const baseSqft = propertyData?.squareFootage || 1500;\n//     const beds = propertyData?.beds || 3;\n//     const baths = propertyData?.baths || 2;\n\n//     return Array.from({ length: 3 }, (_, i) => ({\n//       address: `${123 + i * 10} ${['Oak', 'Maple', 'Pine'][i]} Street`,\n//       soldPrice: Math.round(basePrice * (0.9 + Math.random() * 0.2)),\n//       soldDate: new Date(Date.now() - Math.random() * 180 * 24 * 60 * 60 * 1000),\n//       squareFootage: Math.round(baseSqft * (0.85 + Math.random() * 0.3)),\n//       beds: beds + Math.floor(Math.random() * 2) - 1,\n//       baths: baths,\n//       distance: Math.round(Math.random() * 3 * 10) / 10\n//     }));\n//   };\n\n//   const generateHighlights = (): string[] => {\n//     const highlights = [];\n\n//     if (propertyData?.infrastructureScore > 80) {\n//       highlights.push('Excellent infrastructure condition minimizes renovation risks');\n//     }\n//     if (propertyData?.yearBuilt > 2010) {\n//       highlights.push('Modern construction with energy-efficient systems');\n//     }\n//     if (propertyData?.lienStatus === 'Clear') {\n//       highlights.push('Clear title status ensures smooth transaction');\n//     }\n//     if (propertyData?.estimatedARV > propertyData?.listingPrice * 1.25) {\n//       highlights.push('Strong value-add opportunity with 25%+ appreciation potential');\n//     }\n//     if (rehabScope?.projectedROI > 20) {\n//       highlights.push(`Projected ${rehabScope.projectedROI.toFixed(1)}% ROI exceeds market average`);\n//     }\n\n//     // Ensure at least 3 highlights\n//     while (highlights.length < 3) {\n//       if (!highlights.includes('Strategic location in developing neighborhood')) {\n//         highlights.push('Strategic location in developing neighborhood');\n//       } else if (!highlights.includes('Below-market pricing creates instant equity')) {\n//         highlights.push('Below-market pricing creates instant equity');\n//       } else {\n//         highlights.push('Strong rental demand in local market');\n//       }\n//     }\n\n//     return highlights.slice(0, 5);\n//   };\n\n//   const generateRisks = (): string[] => {\n//     const risks = [];\n\n//     if (propertyData?.yearBuilt < 1980) {\n//       risks.push('Older construction may require additional system updates');\n//     }\n//     if (propertyData?.roofAge > 15) {\n//       risks.push('Roof nearing end of service life');\n//     }\n//     if (!propertyData?.lienStatus || propertyData.lienStatus === 'Unknown') {\n//       risks.push('Lien status requires verification');\n//     }\n//     if (propertyData?.infrastructureScore < 60) {\n//       risks.push('Below-average infrastructure may increase renovation costs');\n//     }\n\n//     // Ensure at least 2 risks for balanced view\n//     if (risks.length === 0) {\n//       risks.push('Market conditions may affect resale timeline');\n//     }\n//     if (risks.length === 1) {\n//       risks.push('Property requires thorough inspection before purchase');\n//     }\n\n//     return risks.slice(0, 3);\n//   };\n\n//   const handleGenerate = async () => {\n//     setIsGenerating(true);\n\n//     const factSheet: FactSheetType = {\n//       propertyId: selectedDocuments[0]?.id || '',\n//       summary: {\n//         address: propertyData?.address || 'Unknown',\n//         beds: propertyData?.beds || 0,\n//         baths: propertyData?.baths || 0,\n//         squareFootage: propertyData?.squareFootage || 0,\n//         yearBuilt: propertyData?.yearBuilt || 0,\n//         propertyType: propertyData?.propertyType || 'Single Family'\n//       },\n//       financials: {\n//         listingPrice: propertyData?.listingPrice || 0,\n//         estimatedARV: propertyData?.estimatedARV || 0,\n//         rehabCost: rehabScope?.totalCost || 0,\n//         projectedROI: rehabScope?.projectedROI || calculateQuickROI()\n//       },\n//       comps: generateComps(),\n//       lienStatus: propertyData?.lienStatus || 'Unknown',\n//       infrastructureScore: propertyData?.infrastructureScore || 70,\n//       highlights: generateHighlights(),\n//       risks: generateRisks(),\n//       generatedAt: new Date()\n//     };\n\n//     // Simulate generation delay\n//     setTimeout(() => {\n//       setPreviewData(factSheet);\n//       setIsGenerating(false);\n//       onGenerateFactSheet(factSheet);\n//     }, 2000);\n//   };\n\n//   const calculateQuickROI = () => {\n//     const purchase = propertyData?.listingPrice || 0;\n//     const rehab = rehabScope?.totalCost || purchase * 0.15;\n//     const arv = propertyData?.estimatedARV || purchase * 1.3;\n//     return ((arv - purchase - rehab) / (purchase + rehab)) * 100;\n//   };\n\n//   if (!propertyData) {\n//     return (\n//       <div className=\"flex items-center justify-center h-full\">\n//         <div className=\"text-center\">\n//           <FileText className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n//           <h3 className=\"text-lg font-semibold mb-2\">No Property Selected</h3>\n//           <p className=\"text-gray-600\">Select property documents to generate a fact sheet</p>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"p-6 max-w-5xl mx-auto\">\n//       {!previewData ? (\n//         <div className=\"bg-white rounded-lg shadow-lg p-8 text-center\">\n//           <FileText className=\"w-24 h-24 text-blue-600 mx-auto mb-6\" />\n//           <h2 className=\"text-2xl font-bold mb-4\">Generate Property Fact Sheet</h2>\n//           <p className=\"text-gray-600 mb-6\">\n//             Create a comprehensive one-page summary with key metrics, comparables, and investment insights\n//           </p>\n\n//           <div className=\"bg-gray-50 rounded-lg p-4 mb-6 text-left\">\n//             <h3 className=\"font-semibold mb-2\">What's Included:</h3>\n//             <ul className=\"space-y-1 text-sm text-gray-600\">\n//               <li>✓ Property overview and specifications</li>\n//               <li>✓ Financial analysis with ROI projections</li>\n//               <li>✓ 3 comparable sales from the area</li>\n//               <li>✓ Investment highlights and risk assessment</li>\n//               <li>✓ Infrastructure score and lien status</li>\n//             </ul>\n//           </div>\n\n//           <button\n//             onClick={handleGenerate}\n//             disabled={isGenerating}\n//             className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 mx-auto\"\n//           >\n//             {isGenerating ? (\n//               <>\n//                 <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\"></div>\n//                 Generating fact sheet...\n//               </>\n//             ) : (\n//               <>\n//                 <FileText size={20} />\n//                 Generate Fact Sheet\n//               </>\n//             )}\n//           </button>\n\n//           <p className=\"text-sm text-gray-500 mt-4\">\n//             <Clock className=\"inline w-4 h-4 mr-1\" />\n//             Generation time: ~3 seconds\n//           </p>\n//         </div>\n//       ) : (\n//         <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n//           {/* Header */}\n//           <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white p-6\">\n//             <div className=\"flex justify-between items-start\">\n//               <div>\n//                 <h1 className=\"text-3xl font-bold mb-2\">Property Fact Sheet</h1>\n//                 <div className=\"flex items-center gap-2 text-xl\">\n//                   <MapPin size={20} />\n//                   <span>{previewData.summary.address}</span>\n//                 </div>\n//               </div>\n//               <div className=\"text-right\">\n//                 <div className=\"text-sm opacity-90\">Generated</div>\n//                 <div className=\"text-lg\">{new Date(previewData.generatedAt).toLocaleDateString()}</div>\n//               </div>\n//             </div>\n//           </div>\n\n//           {/* Property Overview */}\n//           <div className=\"p-6 border-b\">\n//             <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n//               <Home size={20} />\n//               Property Overview\n//             </h2>\n//             <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n//               <div>\n//                 <span className=\"text-gray-600 text-sm\">Property Type</span>\n//                 <p className=\"font-semibold\">{previewData.summary.propertyType}</p>\n//               </div>\n//               <div>\n//                 <span className=\"text-gray-600 text-sm\">Beds/Baths</span>\n//                 <p className=\"font-semibold\">{previewData.summary.beds}/{previewData.summary.baths}</p>\n//               </div>\n//               <div>\n//                 <span className=\"text-gray-600 text-sm\">Square Footage</span>\n//                 <p className=\"font-semibold\">{previewData.summary.squareFootage.toLocaleString()} sq ft</p>\n//               </div>\n//               <div>\n//                 <span className=\"text-gray-600 text-sm\">Year Built</span>\n//                 <p className=\"font-semibold\">{previewData.summary.yearBuilt}</p>\n//               </div>\n//             </div>\n\n//             <div className=\"grid grid-cols-2 gap-4 mt-4\">\n//               <div>\n//                 <span className=\"text-gray-600 text-sm\">Infrastructure Score</span>\n//                 <div className=\"flex items-center gap-2\">\n//                   <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n//                     <div \n//                       className={`h-2 rounded-full ${\n//                         previewData.infrastructureScore >= 80 ? 'bg-green-500' :\n//                         previewData.infrastructureScore >= 60 ? 'bg-yellow-500' : 'bg-red-500'\n//                       }`}\n//                       style={{ width: `${previewData.infrastructureScore}%` }}\n//                     />\n//                   </div>\n//                   <span className=\"font-semibold\">{previewData.infrastructureScore}/100</span>\n//                 </div>\n//               </div>\n//               <div>\n//                 <span className=\"text-gray-600 text-sm\">Lien Status</span>\n//                 <p className={`font-semibold ${\n//                   previewData.lienStatus === 'Clear' ? 'text-green-600' : 'text-yellow-600'\n//                 }`}>\n//                   {previewData.lienStatus}\n//                 </p>\n//               </div>\n//             </div>\n//           </div>\n\n//           {/* Financial Analysis */}\n//           <div className=\"p-6 border-b bg-gray-50\">\n//             <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n//               <DollarSign size={20} />\n//               Financial Analysis\n//             </h2>\n//             <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n//               <div className=\"bg-white p-4 rounded-lg\">\n//                 <span className=\"text-gray-600 text-sm\">Listing Price</span>\n//                 <p className=\"font-semibold text-lg\">${previewData.financials.listingPrice.toLocaleString()}</p>\n//               </div>\n//               <div className=\"bg-white p-4 rounded-lg\">\n//                 <span className=\"text-gray-600 text-sm\">Rehab Cost</span>\n//                 <p className=\"font-semibold text-lg\">${previewData.financials.rehabCost.toLocaleString()}</p>\n//               </div>\n//               <div className=\"bg-white p-4 rounded-lg\">\n//                 <span className=\"text-gray-600 text-sm\">Est. ARV</span>\n//                 <p className=\"font-semibold text-lg\">${previewData.financials.estimatedARV.toLocaleString()}</p>\n//               </div>\n//               <div className=\"bg-white p-4 rounded-lg\">\n//                 <span className=\"text-gray-600 text-sm\">Projected ROI</span>\n//                 <p className=\"font-semibold text-2xl text-green-600\">{previewData.financials.projectedROI.toFixed(1)}%</p>\n//               </div>\n//             </div>\n//           </div>\n\n//           {/* Comparables */}\n//           <div className=\"p-6 border-b\">\n//             <h2 className=\"text-xl font-semibold mb-4\">Recent Comparable Sales</h2>\n//             <div className=\"space-y-3\">\n//               {previewData.comps.map((comp, i) => (\n//                 <div key={i} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n//                   <div className=\"flex-1\">\n//                     <p className=\"font-medium\">{comp.address}</p>\n//                     <p className=\"text-sm text-gray-600\">\n//                       {comp.beds} bed, {comp.baths} bath • {comp.squareFootage.toLocaleString()} sq ft • {comp.distance} mi away\n//                     </p>\n//                   </div>\n//                   <div className=\"text-right\">\n//                     <p className=\"font-semibold text-lg\">${comp.soldPrice.toLocaleString()}</p>\n//                     <p className=\"text-sm text-gray-600\">\n//                       <Calendar className=\"inline w-3 h-3 mr-1\" />\n//                       {new Date(comp.soldDate).toLocaleDateString()}\n//                     </p>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* Highlights & Risks */}\n//           <div className=\"p-6 grid md:grid-cols-2 gap-6\">\n//             <div>\n//               <h3 className=\"font-semibold mb-3 flex items-center gap-2 text-green-700\">\n//                 <TrendingUp size={18} />\n//                 Investment Highlights\n//               </h3>\n//               <ul className=\"space-y-2\">\n//                 {previewData.highlights.map((highlight, i) => (\n//                   <li key={i} className=\"flex items-start gap-2 text-sm\">\n//                     <span className=\"text-green-600 mt-0.5\">✓</span>\n//                     <span>{highlight}</span>\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div>\n//               <h3 className=\"font-semibold mb-3 flex items-center gap-2 text-yellow-700\">\n//                 <AlertTriangle size={18} />\n//                 Potential Risks\n//               </h3>\n//               <ul className=\"space-y-2\">\n//                 {previewData.risks.map((risk, i) => (\n//                   <li key={i} className=\"flex items-start gap-2 text-sm\">\n//                     <span className=\"text-yellow-600 mt-0.5\">⚠</span>\n//                     <span>{risk}</span>\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           </div>\n\n//           {/* Footer */}\n//           <div className=\"bg-gray-50 p-4 flex items-center justify-between\">\n//             <p className=\"text-sm text-gray-600\">\n//               Generated on {new Date(previewData.generatedAt).toLocaleString()}\n//             </p>\n//             <button\n//               className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n//               onClick={() => {/* Handle download */}}\n//             >\n//               <Download size={16} />\n//               Download PDF\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["E:/tripilot-real-estate(29-june)/frontend/src/components/Snapshot/FactSheet.tsx"],"sourcesContent":["// // frontend/src/components/Snapshot/FactSheet.tsx\r\n\r\n// import React, { useState } from 'react';\r\n// import { FileText, Download, TrendingUp, AlertTriangle, Home, DollarSign, MapPin, Calendar, Clock } from 'lucide-react';\r\n// import { FactSheet as FactSheetType, Comp } from '../../../../shared/types';\r\n\r\n// interface FactSheetProps {\r\n//   selectedDocuments: any[];\r\n//   rehabScope?: any;\r\n//   onGenerateFactSheet: (factSheet: FactSheetType) => void;\r\n// }\r\n\r\n// export const FactSheet: React.FC<FactSheetProps> = ({\r\n//   selectedDocuments,\r\n//   rehabScope,\r\n//   onGenerateFactSheet\r\n// }) => {\r\n//   const [isGenerating, setIsGenerating] = useState(false);\r\n//   const [previewData, setPreviewData] = useState<FactSheetType | null>(null);\r\n\r\n//   // Get property data from selected documents\r\n//   const propertyData = React.useMemo(() => {\r\n//     if (selectedDocuments.length === 0) return null;\r\n    \r\n//     const merged: any = {};\r\n//     selectedDocuments.forEach(doc => {\r\n//       Object.entries(doc).forEach(([key, value]) => {\r\n//         if (value !== null && value !== undefined && value !== 'N/A') {\r\n//           merged[key] = merged[key] || value;\r\n//         }\r\n//       });\r\n//     });\r\n//     return merged;\r\n//   }, [selectedDocuments]);\r\n\r\n//   const generateComps = (): Comp[] => {\r\n//     const basePrice = propertyData?.listingPrice || 300000;\r\n//     const baseSqft = propertyData?.squareFootage || 1500;\r\n//     const beds = propertyData?.beds || 3;\r\n//     const baths = propertyData?.baths || 2;\r\n\r\n//     return Array.from({ length: 3 }, (_, i) => ({\r\n//       address: `${123 + i * 10} ${['Oak', 'Maple', 'Pine'][i]} Street`,\r\n//       soldPrice: Math.round(basePrice * (0.9 + Math.random() * 0.2)),\r\n//       soldDate: new Date(Date.now() - Math.random() * 180 * 24 * 60 * 60 * 1000),\r\n//       squareFootage: Math.round(baseSqft * (0.85 + Math.random() * 0.3)),\r\n//       beds: beds + Math.floor(Math.random() * 2) - 1,\r\n//       baths: baths,\r\n//       distance: Math.round(Math.random() * 3 * 10) / 10\r\n//     }));\r\n//   };\r\n\r\n//   const generateHighlights = (): string[] => {\r\n//     const highlights = [];\r\n    \r\n//     if (propertyData?.infrastructureScore > 80) {\r\n//       highlights.push('Excellent infrastructure condition minimizes renovation risks');\r\n//     }\r\n//     if (propertyData?.yearBuilt > 2010) {\r\n//       highlights.push('Modern construction with energy-efficient systems');\r\n//     }\r\n//     if (propertyData?.lienStatus === 'Clear') {\r\n//       highlights.push('Clear title status ensures smooth transaction');\r\n//     }\r\n//     if (propertyData?.estimatedARV > propertyData?.listingPrice * 1.25) {\r\n//       highlights.push('Strong value-add opportunity with 25%+ appreciation potential');\r\n//     }\r\n//     if (rehabScope?.projectedROI > 20) {\r\n//       highlights.push(`Projected ${rehabScope.projectedROI.toFixed(1)}% ROI exceeds market average`);\r\n//     }\r\n    \r\n//     // Ensure at least 3 highlights\r\n//     while (highlights.length < 3) {\r\n//       if (!highlights.includes('Strategic location in developing neighborhood')) {\r\n//         highlights.push('Strategic location in developing neighborhood');\r\n//       } else if (!highlights.includes('Below-market pricing creates instant equity')) {\r\n//         highlights.push('Below-market pricing creates instant equity');\r\n//       } else {\r\n//         highlights.push('Strong rental demand in local market');\r\n//       }\r\n//     }\r\n    \r\n//     return highlights.slice(0, 5);\r\n//   };\r\n\r\n//   const generateRisks = (): string[] => {\r\n//     const risks = [];\r\n    \r\n//     if (propertyData?.yearBuilt < 1980) {\r\n//       risks.push('Older construction may require additional system updates');\r\n//     }\r\n//     if (propertyData?.roofAge > 15) {\r\n//       risks.push('Roof nearing end of service life');\r\n//     }\r\n//     if (!propertyData?.lienStatus || propertyData.lienStatus === 'Unknown') {\r\n//       risks.push('Lien status requires verification');\r\n//     }\r\n//     if (propertyData?.infrastructureScore < 60) {\r\n//       risks.push('Below-average infrastructure may increase renovation costs');\r\n//     }\r\n    \r\n//     // Ensure at least 2 risks for balanced view\r\n//     if (risks.length === 0) {\r\n//       risks.push('Market conditions may affect resale timeline');\r\n//     }\r\n//     if (risks.length === 1) {\r\n//       risks.push('Property requires thorough inspection before purchase');\r\n//     }\r\n    \r\n//     return risks.slice(0, 3);\r\n//   };\r\n\r\n//   const handleGenerate = async () => {\r\n//     setIsGenerating(true);\r\n    \r\n//     const factSheet: FactSheetType = {\r\n//       propertyId: selectedDocuments[0]?.id || '',\r\n//       summary: {\r\n//         address: propertyData?.address || 'Unknown',\r\n//         beds: propertyData?.beds || 0,\r\n//         baths: propertyData?.baths || 0,\r\n//         squareFootage: propertyData?.squareFootage || 0,\r\n//         yearBuilt: propertyData?.yearBuilt || 0,\r\n//         propertyType: propertyData?.propertyType || 'Single Family'\r\n//       },\r\n//       financials: {\r\n//         listingPrice: propertyData?.listingPrice || 0,\r\n//         estimatedARV: propertyData?.estimatedARV || 0,\r\n//         rehabCost: rehabScope?.totalCost || 0,\r\n//         projectedROI: rehabScope?.projectedROI || calculateQuickROI()\r\n//       },\r\n//       comps: generateComps(),\r\n//       lienStatus: propertyData?.lienStatus || 'Unknown',\r\n//       infrastructureScore: propertyData?.infrastructureScore || 70,\r\n//       highlights: generateHighlights(),\r\n//       risks: generateRisks(),\r\n//       generatedAt: new Date()\r\n//     };\r\n\r\n//     // Simulate generation delay\r\n//     setTimeout(() => {\r\n//       setPreviewData(factSheet);\r\n//       setIsGenerating(false);\r\n//       onGenerateFactSheet(factSheet);\r\n//     }, 2000);\r\n//   };\r\n\r\n//   const calculateQuickROI = () => {\r\n//     const purchase = propertyData?.listingPrice || 0;\r\n//     const rehab = rehabScope?.totalCost || purchase * 0.15;\r\n//     const arv = propertyData?.estimatedARV || purchase * 1.3;\r\n//     return ((arv - purchase - rehab) / (purchase + rehab)) * 100;\r\n//   };\r\n\r\n//   if (!propertyData) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center h-full\">\r\n//         <div className=\"text-center\">\r\n//           <FileText className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n//           <h3 className=\"text-lg font-semibold mb-2\">No Property Selected</h3>\r\n//           <p className=\"text-gray-600\">Select property documents to generate a fact sheet</p>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-5xl mx-auto\">\r\n//       {!previewData ? (\r\n//         <div className=\"bg-white rounded-lg shadow-lg p-8 text-center\">\r\n//           <FileText className=\"w-24 h-24 text-blue-600 mx-auto mb-6\" />\r\n//           <h2 className=\"text-2xl font-bold mb-4\">Generate Property Fact Sheet</h2>\r\n//           <p className=\"text-gray-600 mb-6\">\r\n//             Create a comprehensive one-page summary with key metrics, comparables, and investment insights\r\n//           </p>\r\n          \r\n//           <div className=\"bg-gray-50 rounded-lg p-4 mb-6 text-left\">\r\n//             <h3 className=\"font-semibold mb-2\">What's Included:</h3>\r\n//             <ul className=\"space-y-1 text-sm text-gray-600\">\r\n//               <li>✓ Property overview and specifications</li>\r\n//               <li>✓ Financial analysis with ROI projections</li>\r\n//               <li>✓ 3 comparable sales from the area</li>\r\n//               <li>✓ Investment highlights and risk assessment</li>\r\n//               <li>✓ Infrastructure score and lien status</li>\r\n//             </ul>\r\n//           </div>\r\n\r\n//           <button\r\n//             onClick={handleGenerate}\r\n//             disabled={isGenerating}\r\n//             className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 mx-auto\"\r\n//           >\r\n//             {isGenerating ? (\r\n//               <>\r\n//                 <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\"></div>\r\n//                 Generating fact sheet...\r\n//               </>\r\n//             ) : (\r\n//               <>\r\n//                 <FileText size={20} />\r\n//                 Generate Fact Sheet\r\n//               </>\r\n//             )}\r\n//           </button>\r\n          \r\n//           <p className=\"text-sm text-gray-500 mt-4\">\r\n//             <Clock className=\"inline w-4 h-4 mr-1\" />\r\n//             Generation time: ~3 seconds\r\n//           </p>\r\n//         </div>\r\n//       ) : (\r\n//         <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n//           {/* Header */}\r\n//           <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white p-6\">\r\n//             <div className=\"flex justify-between items-start\">\r\n//               <div>\r\n//                 <h1 className=\"text-3xl font-bold mb-2\">Property Fact Sheet</h1>\r\n//                 <div className=\"flex items-center gap-2 text-xl\">\r\n//                   <MapPin size={20} />\r\n//                   <span>{previewData.summary.address}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"text-right\">\r\n//                 <div className=\"text-sm opacity-90\">Generated</div>\r\n//                 <div className=\"text-lg\">{new Date(previewData.generatedAt).toLocaleDateString()}</div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Property Overview */}\r\n//           <div className=\"p-6 border-b\">\r\n//             <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\r\n//               <Home size={20} />\r\n//               Property Overview\r\n//             </h2>\r\n//             <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n//               <div>\r\n//                 <span className=\"text-gray-600 text-sm\">Property Type</span>\r\n//                 <p className=\"font-semibold\">{previewData.summary.propertyType}</p>\r\n//               </div>\r\n//               <div>\r\n//                 <span className=\"text-gray-600 text-sm\">Beds/Baths</span>\r\n//                 <p className=\"font-semibold\">{previewData.summary.beds}/{previewData.summary.baths}</p>\r\n//               </div>\r\n//               <div>\r\n//                 <span className=\"text-gray-600 text-sm\">Square Footage</span>\r\n//                 <p className=\"font-semibold\">{previewData.summary.squareFootage.toLocaleString()} sq ft</p>\r\n//               </div>\r\n//               <div>\r\n//                 <span className=\"text-gray-600 text-sm\">Year Built</span>\r\n//                 <p className=\"font-semibold\">{previewData.summary.yearBuilt}</p>\r\n//               </div>\r\n//             </div>\r\n            \r\n//             <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n//               <div>\r\n//                 <span className=\"text-gray-600 text-sm\">Infrastructure Score</span>\r\n//                 <div className=\"flex items-center gap-2\">\r\n//                   <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\r\n//                     <div \r\n//                       className={`h-2 rounded-full ${\r\n//                         previewData.infrastructureScore >= 80 ? 'bg-green-500' :\r\n//                         previewData.infrastructureScore >= 60 ? 'bg-yellow-500' : 'bg-red-500'\r\n//                       }`}\r\n//                       style={{ width: `${previewData.infrastructureScore}%` }}\r\n//                     />\r\n//                   </div>\r\n//                   <span className=\"font-semibold\">{previewData.infrastructureScore}/100</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div>\r\n//                 <span className=\"text-gray-600 text-sm\">Lien Status</span>\r\n//                 <p className={`font-semibold ${\r\n//                   previewData.lienStatus === 'Clear' ? 'text-green-600' : 'text-yellow-600'\r\n//                 }`}>\r\n//                   {previewData.lienStatus}\r\n//                 </p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Financial Analysis */}\r\n//           <div className=\"p-6 border-b bg-gray-50\">\r\n//             <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\r\n//               <DollarSign size={20} />\r\n//               Financial Analysis\r\n//             </h2>\r\n//             <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n//               <div className=\"bg-white p-4 rounded-lg\">\r\n//                 <span className=\"text-gray-600 text-sm\">Listing Price</span>\r\n//                 <p className=\"font-semibold text-lg\">${previewData.financials.listingPrice.toLocaleString()}</p>\r\n//               </div>\r\n//               <div className=\"bg-white p-4 rounded-lg\">\r\n//                 <span className=\"text-gray-600 text-sm\">Rehab Cost</span>\r\n//                 <p className=\"font-semibold text-lg\">${previewData.financials.rehabCost.toLocaleString()}</p>\r\n//               </div>\r\n//               <div className=\"bg-white p-4 rounded-lg\">\r\n//                 <span className=\"text-gray-600 text-sm\">Est. ARV</span>\r\n//                 <p className=\"font-semibold text-lg\">${previewData.financials.estimatedARV.toLocaleString()}</p>\r\n//               </div>\r\n//               <div className=\"bg-white p-4 rounded-lg\">\r\n//                 <span className=\"text-gray-600 text-sm\">Projected ROI</span>\r\n//                 <p className=\"font-semibold text-2xl text-green-600\">{previewData.financials.projectedROI.toFixed(1)}%</p>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Comparables */}\r\n//           <div className=\"p-6 border-b\">\r\n//             <h2 className=\"text-xl font-semibold mb-4\">Recent Comparable Sales</h2>\r\n//             <div className=\"space-y-3\">\r\n//               {previewData.comps.map((comp, i) => (\r\n//                 <div key={i} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\r\n//                   <div className=\"flex-1\">\r\n//                     <p className=\"font-medium\">{comp.address}</p>\r\n//                     <p className=\"text-sm text-gray-600\">\r\n//                       {comp.beds} bed, {comp.baths} bath • {comp.squareFootage.toLocaleString()} sq ft • {comp.distance} mi away\r\n//                     </p>\r\n//                   </div>\r\n//                   <div className=\"text-right\">\r\n//                     <p className=\"font-semibold text-lg\">${comp.soldPrice.toLocaleString()}</p>\r\n//                     <p className=\"text-sm text-gray-600\">\r\n//                       <Calendar className=\"inline w-3 h-3 mr-1\" />\r\n//                       {new Date(comp.soldDate).toLocaleDateString()}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Highlights & Risks */}\r\n//           <div className=\"p-6 grid md:grid-cols-2 gap-6\">\r\n//             <div>\r\n//               <h3 className=\"font-semibold mb-3 flex items-center gap-2 text-green-700\">\r\n//                 <TrendingUp size={18} />\r\n//                 Investment Highlights\r\n//               </h3>\r\n//               <ul className=\"space-y-2\">\r\n//                 {previewData.highlights.map((highlight, i) => (\r\n//                   <li key={i} className=\"flex items-start gap-2 text-sm\">\r\n//                     <span className=\"text-green-600 mt-0.5\">✓</span>\r\n//                     <span>{highlight}</span>\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//             <div>\r\n//               <h3 className=\"font-semibold mb-3 flex items-center gap-2 text-yellow-700\">\r\n//                 <AlertTriangle size={18} />\r\n//                 Potential Risks\r\n//               </h3>\r\n//               <ul className=\"space-y-2\">\r\n//                 {previewData.risks.map((risk, i) => (\r\n//                   <li key={i} className=\"flex items-start gap-2 text-sm\">\r\n//                     <span className=\"text-yellow-600 mt-0.5\">⚠</span>\r\n//                     <span>{risk}</span>\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Footer */}\r\n//           <div className=\"bg-gray-50 p-4 flex items-center justify-between\">\r\n//             <p className=\"text-sm text-gray-600\">\r\n//               Generated on {new Date(previewData.generatedAt).toLocaleString()}\r\n//             </p>\r\n//             <button\r\n//               className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n//               onClick={() => {/* Handle download */}}\r\n//             >\r\n//               <Download size={16} />\r\n//               Download PDF\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}