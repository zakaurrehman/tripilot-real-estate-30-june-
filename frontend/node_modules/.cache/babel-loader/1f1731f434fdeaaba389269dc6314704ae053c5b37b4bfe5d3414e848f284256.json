{"ast":null,"code":"// shared/types/index.ts\n\n// User and Auth Types\n\n// Lapis Usage Tracking\n\n// Document Types\n\n// Rehab and ROI Types\nexport let WorkItemType = /*#__PURE__*/function (WorkItemType) {\n  WorkItemType[\"ROOF\"] = \"Roof\";\n  WorkItemType[\"KITCHEN\"] = \"Kitchen\";\n  WorkItemType[\"BATH\"] = \"Bath\";\n  WorkItemType[\"FLOORING\"] = \"Flooring\";\n  WorkItemType[\"INTERIOR_PAINT\"] = \"Interior Paint\";\n  WorkItemType[\"EXTERIOR_PAINT\"] = \"Exterior Paint\";\n  WorkItemType[\"WINDOWS\"] = \"Windows\";\n  WorkItemType[\"HVAC\"] = \"HVAC\";\n  WorkItemType[\"ELECTRICAL\"] = \"Electrical Re-wire\";\n  WorkItemType[\"PLUMBING\"] = \"Plumbing\";\n  WorkItemType[\"LANDSCAPING\"] = \"Landscaping\";\n  return WorkItemType;\n}({});\nexport const WORK_ITEM_COSTS = {\n  [WorkItemType.ROOF]: {\n    cost: 10,\n    unit: 'sf'\n  },\n  [WorkItemType.KITCHEN]: {\n    cost: 25000,\n    unit: 'total'\n  },\n  [WorkItemType.BATH]: {\n    cost: 12000,\n    unit: 'each'\n  },\n  [WorkItemType.FLOORING]: {\n    cost: 5,\n    unit: 'sf'\n  },\n  [WorkItemType.INTERIOR_PAINT]: {\n    cost: 2,\n    unit: 'sf'\n  },\n  [WorkItemType.EXTERIOR_PAINT]: {\n    cost: 3,\n    unit: 'sf'\n  },\n  [WorkItemType.WINDOWS]: {\n    cost: 500,\n    unit: 'each'\n  },\n  [WorkItemType.HVAC]: {\n    cost: 8000,\n    unit: 'total'\n  },\n  [WorkItemType.ELECTRICAL]: {\n    cost: 15000,\n    unit: 'total'\n  },\n  [WorkItemType.PLUMBING]: {\n    cost: 12000,\n    unit: 'total'\n  },\n  [WorkItemType.LANDSCAPING]: {\n    cost: 5000,\n    unit: 'total'\n  }\n};\n\n// Contractor Types\n\n// Fact Sheet Types\n\n// Chat Types\n\n// API Response Types","map":{"version":3,"names":["WorkItemType","WORK_ITEM_COSTS","ROOF","cost","unit","KITCHEN","BATH","FLOORING","INTERIOR_PAINT","EXTERIOR_PAINT","WINDOWS","HVAC","ELECTRICAL","PLUMBING","LANDSCAPING"],"sources":["E:/tripilot-real-estate(29-june)/frontend/src/shared/types/index.ts"],"sourcesContent":["// shared/types/index.ts\r\n\r\n// User and Auth Types\r\nexport interface User {\r\n  id: string;\r\n  email: string;\r\n  subscription: 'trial' | 'pay-as-you-go' | 'starter' | 'pro' | 'enterprise';\r\n  lapisUsed: number;\r\n  lapisTotal: number;\r\n  verticalType: 'real-estate' | 'supply-chain' | 'compliance' | 'construction';\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\n// Lapis Usage Tracking\r\nexport interface LapisUsage {\r\n  search: number;\r\n  automate: number;\r\n  snapshot: number;\r\n  remaining: number;\r\n  total: number;\r\n}\r\n\r\n// Document Types\r\nexport type DocumentType = 'deed' | 'mls' | 'inspection' | 'photo' | 'other';\r\n\r\nexport interface ExtractedFields {\r\n  // Core property fields\r\n  address?: string;\r\n  squareFootage?: number;\r\n  beds?: number;\r\n  baths?: number;\r\n  yearBuilt?: number;\r\n  propertyType?: string;\r\n  \r\n  // Financial fields\r\n  listingPrice?: number;\r\n  estimatedARV?: number;\r\n  taxAssessment?: number;\r\n  \r\n  // Condition fields\r\n  roofAge?: number;\r\n  roofType?: string;\r\n  heatingType?: string;\r\n  coolingType?: string;\r\n  kitchenCondition?: string;\r\n  bathroomCondition?: string;\r\n  \r\n  // Legal/Administrative\r\n  lienStatus?: 'Clear' | 'Liens Present' | 'Unknown';\r\n  zoningType?: string;\r\n  lotSize?: number;\r\n  \r\n  // Calculated fields\r\n  infrastructureScore?: number;\r\n  comps?: Comp[];\r\n  \r\n  // Metadata\r\n  confidence?: Record<string, number>;\r\n  sourceLabels?: Record<string, string[]>;\r\n  [key: string]: any; // Allow additional fields\r\n}\r\n\r\nexport interface Document {\r\n  id: string;\r\n  filename: string;\r\n  type: DocumentType;\r\n  uploadedAt: Date;\r\n  status: 'processing' | 'completed' | 'failed';\r\n  hash: string;\r\n  userId: string;\r\n  extractedFields?: ExtractedFields;\r\n  error?: string;\r\n}\r\n\r\n// Rehab and ROI Types\r\nexport enum WorkItemType {\r\n  ROOF = 'Roof',\r\n  KITCHEN = 'Kitchen',\r\n  BATH = 'Bath',\r\n  FLOORING = 'Flooring',\r\n  INTERIOR_PAINT = 'Interior Paint',\r\n  EXTERIOR_PAINT = 'Exterior Paint',\r\n  WINDOWS = 'Windows',\r\n  HVAC = 'HVAC',\r\n  ELECTRICAL = 'Electrical Re-wire',\r\n  PLUMBING = 'Plumbing',\r\n  LANDSCAPING = 'Landscaping'\r\n}\r\n\r\nexport interface WorkItemCost {\r\n  cost: number;\r\n  unit: 'sf' | 'each' | 'room' | 'total';\r\n}\r\n\r\nexport const WORK_ITEM_COSTS: Record<WorkItemType, WorkItemCost> = {\r\n  [WorkItemType.ROOF]: { cost: 10, unit: 'sf' },\r\n  [WorkItemType.KITCHEN]: { cost: 25000, unit: 'total' },\r\n  [WorkItemType.BATH]: { cost: 12000, unit: 'each' },\r\n  [WorkItemType.FLOORING]: { cost: 5, unit: 'sf' },\r\n  [WorkItemType.INTERIOR_PAINT]: { cost: 2, unit: 'sf' },\r\n  [WorkItemType.EXTERIOR_PAINT]: { cost: 3, unit: 'sf' },\r\n  [WorkItemType.WINDOWS]: { cost: 500, unit: 'each' },\r\n  [WorkItemType.HVAC]: { cost: 8000, unit: 'total' },\r\n  [WorkItemType.ELECTRICAL]: { cost: 15000, unit: 'total' },\r\n  [WorkItemType.PLUMBING]: { cost: 12000, unit: 'total' },\r\n  [WorkItemType.LANDSCAPING]: { cost: 5000, unit: 'total' }\r\n};\r\n\r\nexport interface RehabItem {\r\n  workType: WorkItemType;\r\n  unitCost: number;\r\n  quantity: number;\r\n  unit: string;\r\n  totalCost: number;\r\n  notes?: string;\r\n}\r\n\r\nexport interface RehabScope {\r\n  propertyId: string;\r\n  propertySize: number;\r\n  items: RehabItem[];\r\n  contingencyPercent: number;\r\n  permitFees: number;\r\n  totalCost: number;\r\n  timeline: number; // in days\r\n  projectedROI?: number;\r\n}\r\n\r\n// Contractor Types\r\nexport interface Contractor {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  specialties: WorkItemType[];\r\n  rating: number;\r\n  availability: boolean;\r\n  priceRange: 'low' | 'medium' | 'high';\r\n  location: string;\r\n  matchScore?: number;\r\n  matchedSpecialties?: WorkItemType[];\r\n  estimatedCost?: number;\r\n}\r\n\r\n// Fact Sheet Types\r\nexport interface Comp {\r\n  address: string;\r\n  soldPrice: number;\r\n  soldDate: Date;\r\n  squareFootage: number;\r\n  beds: number;\r\n  baths: number;\r\n  distance: number; // miles\r\n}\r\n\r\nexport interface FactSheet {\r\n  propertyId: string;\r\n  summary: {\r\n    address: string;\r\n    beds: number;\r\n    baths: number;\r\n    squareFootage: number;\r\n    yearBuilt: number;\r\n    propertyType: string;\r\n  };\r\n  financials: {\r\n    listingPrice: number;\r\n    estimatedARV: number;\r\n    rehabCost: number;\r\n    projectedROI: number;\r\n  };\r\n  comps: Comp[];\r\n  lienStatus: string;\r\n  infrastructureScore: number;\r\n  highlights: string[];\r\n  risks: string[];\r\n  generatedAt: Date;\r\n}\r\n\r\n// Chat Types\r\nexport interface ChatMessage {\r\n  id: string;\r\n  role: 'user' | 'assistant';\r\n  content: string;\r\n  timestamp: Date;\r\n  intent?: 'search' | 'automate' | 'snapshot' | 'unclear';\r\n  context?: any;\r\n}\r\n\r\nexport interface Conversation {\r\n  id: string;\r\n  userId: string;\r\n  messages: ChatMessage[];\r\n  context: Record<string, any>;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\n// API Response Types\r\nexport interface ApiResponse<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n  message?: string;\r\n}\r\n\r\nexport interface UploadResponse {\r\n  documents: Document[];\r\n  message: string;\r\n}\r\n\r\nexport interface SearchResponse {\r\n  results: any[];\r\n  total: number;\r\n  page: number;\r\n  query: string;\r\n}\r\n\r\nexport interface ChatResponse {\r\n  conversationId: string;\r\n  message: ChatMessage;\r\n  suggestedActions?: string[];\r\n}"],"mappings":"AAAA;;AAEA;;AAYA;;AASA;;AAoDA;AACA,WAAYA,YAAY,0BAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAmBxB,OAAO,MAAMC,eAAmD,GAAG;EACjE,CAACD,YAAY,CAACE,IAAI,GAAG;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAK,CAAC;EAC7C,CAACJ,YAAY,CAACK,OAAO,GAAG;IAAEF,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAQ,CAAC;EACtD,CAACJ,YAAY,CAACM,IAAI,GAAG;IAAEH,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC;EAClD,CAACJ,YAAY,CAACO,QAAQ,GAAG;IAAEJ,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC;EAChD,CAACJ,YAAY,CAACQ,cAAc,GAAG;IAAEL,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC;EACtD,CAACJ,YAAY,CAACS,cAAc,GAAG;IAAEN,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC;EACtD,CAACJ,YAAY,CAACU,OAAO,GAAG;IAAEP,IAAI,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAO,CAAC;EACnD,CAACJ,YAAY,CAACW,IAAI,GAAG;IAAER,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC;EAClD,CAACJ,YAAY,CAACY,UAAU,GAAG;IAAET,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAQ,CAAC;EACzD,CAACJ,YAAY,CAACa,QAAQ,GAAG;IAAEV,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAQ,CAAC;EACvD,CAACJ,YAAY,CAACc,WAAW,GAAG;IAAEX,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ;AAC1D,CAAC;;AAsBD;;AAgBA;;AAmCA;;AAmBA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}